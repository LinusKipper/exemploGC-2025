   0  $accept : prog $end

   1  $$1 :

   2  prog : $$1 dList blocoFuncoes

   3  blocoFuncoes : blocoFuncoes itemFuncao
   4               | itemFuncao

   5  itemFuncao : funcDecl
   6             | mainF

   7  $$2 :

   8  $$3 :

   9  mainF : VOID MAIN '(' ')' $$2 '{' lcmd $$3 '}'

  10  dList : decl dList
  11        |

  12  fList : fList funcDecl
  13        |

  14  decl : type ID ';'
  15       | type ID '[' NUM ']' ';'

  16  paramList : paramList ',' type ID
  17            | type ID
  18            |

  19  argList : argList ',' exp
  20          | exp
  21          |

  22  $$4 :

  23  $$5 :

  24  funcDecl : type ID '(' paramList ')' '{' $$4 dList lcmd $$5 '}'

  25  type : INT
  26       | FLOAT
  27       | BOOL

  28  lcmd : lcmd cmd
  29       |

  30  cmd : '{' lcmd '}'
  31      | exp ';'
  32      | WRITE '(' LIT ')' ';'

  33  $$6 :

  34  cmd : WRITE '(' LIT $$6 ',' exp ')' ';'
  35      | ID '[' exp ']' '=' exp ';'
  36      | READ '(' ID ')' ';'

  37  $$7 :

  38  $$8 :

  39  cmd : WHILE $$7 '(' exp ')' $$8 cmd

  40  $$9 :

  41  cmd : IF '(' exp $$9 ')' cmd restoIf

  42  $$10 :

  43  $$11 :

  44  cmd : DO $$10 cmd WHILE '(' exp ')' ';' $$11
  45      | CONTINUE ';'
  46      | BREAK ';'

  47  $$12 :

  48  $$13 :

  49  $$14 :

  50  cmd : FOR '(' expOpc ';' $$12 expOpcL ';' $$13 expOpc ')' $$14 cmd
  51      | RETURN NUM ';'
  52      | RETURN exp ';'

  53  expOpc : exp
  54         |

  55  expOpcL : exp
  56          |

  57  $$15 :

  58  restoIf : ELSE $$15 cmd
  59          |

  60  exp : NUM
  61      | TRUE
  62      | FALSE
  63      | ID
  64      | '(' exp ')'
  65      | '!' exp
  66      | exp '+' exp
  67      | exp '-' exp
  68      | exp '*' exp
  69      | exp '/' exp
  70      | exp '%' exp
  71      | exp '>' exp
  72      | exp '<' exp
  73      | exp EQ exp
  74      | exp LEQ exp
  75      | exp GEQ exp
  76      | exp NEQ exp
  77      | exp OR exp
  78      | exp AND exp
  79      | ID '=' exp
  80      | ID INC
  81      | INC ID
  82      | ID DEC
  83      | DEC ID
  84      | ID PLUSE exp

  85  $$16 :

  86  $$17 :

  87  exp : exp '?' $$16 exp $$17 ':' exp
  88      | ID '[' exp ']'
  89      | ID '(' argList ')'

state 0
	$accept : . prog $end  (0)
	$$1 : .  (1)

	.  reduce 1

	prog  goto 1
	$$1  goto 2


state 1
	$accept : prog . $end  (0)

	$end  accept


2: shift/reduce conflict (shift 3, reduce 11) on INT
2: shift/reduce conflict (shift 4, reduce 11) on FLOAT
2: shift/reduce conflict (shift 5, reduce 11) on BOOL
state 2
	prog : $$1 . dList blocoFuncoes  (2)
	dList : .  (11)

	INT  shift 3
	FLOAT  shift 4
	BOOL  shift 5
	VOID  reduce 11

	type  goto 6
	dList  goto 7
	decl  goto 8


state 3
	type : INT .  (25)

	.  reduce 25


state 4
	type : FLOAT .  (26)

	.  reduce 26


state 5
	type : BOOL .  (27)

	.  reduce 27


state 6
	decl : type . ID ';'  (14)
	decl : type . ID '[' NUM ']' ';'  (15)

	ID  shift 9
	.  error


state 7
	prog : $$1 dList . blocoFuncoes  (2)

	INT  shift 3
	FLOAT  shift 4
	BOOL  shift 5
	VOID  shift 10
	.  error

	type  goto 11
	blocoFuncoes  goto 12
	itemFuncao  goto 13
	funcDecl  goto 14
	mainF  goto 15


8: shift/reduce conflict (shift 3, reduce 11) on INT
8: shift/reduce conflict (shift 4, reduce 11) on FLOAT
8: shift/reduce conflict (shift 5, reduce 11) on BOOL
state 8
	dList : decl . dList  (10)
	dList : .  (11)

	INT  shift 3
	FLOAT  shift 4
	BOOL  shift 5
	ID  reduce 11
	NUM  reduce 11
	VOID  reduce 11
	READ  reduce 11
	WRITE  reduce 11
	IF  reduce 11
	INC  reduce 11
	BREAK  reduce 11
	CONTINUE  reduce 11
	WHILE  reduce 11
	TRUE  reduce 11
	FALSE  reduce 11
	DO  reduce 11
	DEC  reduce 11
	FOR  reduce 11
	RETURN  reduce 11
	'!'  reduce 11
	'('  reduce 11
	'{'  reduce 11
	'}'  reduce 11

	type  goto 6
	dList  goto 16
	decl  goto 8


state 9
	decl : type ID . ';'  (14)
	decl : type ID . '[' NUM ']' ';'  (15)

	';'  shift 17
	'['  shift 18
	.  error


state 10
	mainF : VOID . MAIN '(' ')' $$2 '{' lcmd $$3 '}'  (9)

	MAIN  shift 19
	.  error


state 11
	funcDecl : type . ID '(' paramList ')' '{' $$4 dList lcmd $$5 '}'  (24)

	ID  shift 20
	.  error


state 12
	prog : $$1 dList blocoFuncoes .  (2)
	blocoFuncoes : blocoFuncoes . itemFuncao  (3)

	INT  shift 3
	FLOAT  shift 4
	BOOL  shift 5
	VOID  shift 10
	$end  reduce 2

	type  goto 11
	itemFuncao  goto 21
	funcDecl  goto 14
	mainF  goto 15


state 13
	blocoFuncoes : itemFuncao .  (4)

	.  reduce 4


state 14
	itemFuncao : funcDecl .  (5)

	.  reduce 5


state 15
	itemFuncao : mainF .  (6)

	.  reduce 6


state 16
	dList : decl dList .  (10)

	.  reduce 10


state 17
	decl : type ID ';' .  (14)

	.  reduce 14


state 18
	decl : type ID '[' . NUM ']' ';'  (15)

	NUM  shift 22
	.  error


state 19
	mainF : VOID MAIN . '(' ')' $$2 '{' lcmd $$3 '}'  (9)

	'('  shift 23
	.  error


state 20
	funcDecl : type ID . '(' paramList ')' '{' $$4 dList lcmd $$5 '}'  (24)

	'('  shift 24
	.  error


state 21
	blocoFuncoes : blocoFuncoes itemFuncao .  (3)

	.  reduce 3


state 22
	decl : type ID '[' NUM . ']' ';'  (15)

	']'  shift 25
	.  error


state 23
	mainF : VOID MAIN '(' . ')' $$2 '{' lcmd $$3 '}'  (9)

	')'  shift 26
	.  error


state 24
	funcDecl : type ID '(' . paramList ')' '{' $$4 dList lcmd $$5 '}'  (24)
	paramList : .  (18)

	INT  shift 3
	FLOAT  shift 4
	BOOL  shift 5
	')'  reduce 18
	','  reduce 18

	type  goto 27
	paramList  goto 28


state 25
	decl : type ID '[' NUM ']' . ';'  (15)

	';'  shift 29
	.  error


state 26
	mainF : VOID MAIN '(' ')' . $$2 '{' lcmd $$3 '}'  (9)
	$$2 : .  (7)

	.  reduce 7

	$$2  goto 30


state 27
	paramList : type . ID  (17)

	ID  shift 31
	.  error


state 28
	paramList : paramList . ',' type ID  (16)
	funcDecl : type ID '(' paramList . ')' '{' $$4 dList lcmd $$5 '}'  (24)

	')'  shift 32
	','  shift 33
	.  error


state 29
	decl : type ID '[' NUM ']' ';' .  (15)

	.  reduce 15


state 30
	mainF : VOID MAIN '(' ')' $$2 . '{' lcmd $$3 '}'  (9)

	'{'  shift 34
	.  error


state 31
	paramList : type ID .  (17)

	.  reduce 17


state 32
	funcDecl : type ID '(' paramList ')' . '{' $$4 dList lcmd $$5 '}'  (24)

	'{'  shift 35
	.  error


state 33
	paramList : paramList ',' . type ID  (16)

	INT  shift 3
	FLOAT  shift 4
	BOOL  shift 5
	.  error

	type  goto 36


state 34
	mainF : VOID MAIN '(' ')' $$2 '{' . lcmd $$3 '}'  (9)
	lcmd : .  (29)

	.  reduce 29

	lcmd  goto 37


state 35
	funcDecl : type ID '(' paramList ')' '{' . $$4 dList lcmd $$5 '}'  (24)
	$$4 : .  (22)

	.  reduce 22

	$$4  goto 38


state 36
	paramList : paramList ',' type . ID  (16)

	ID  shift 39
	.  error


state 37
	mainF : VOID MAIN '(' ')' $$2 '{' lcmd . $$3 '}'  (9)
	lcmd : lcmd . cmd  (28)
	$$3 : .  (8)

	ID  shift 40
	NUM  shift 41
	READ  shift 42
	WRITE  shift 43
	IF  shift 44
	INC  shift 45
	BREAK  shift 46
	CONTINUE  shift 47
	WHILE  shift 48
	TRUE  shift 49
	FALSE  shift 50
	DO  shift 51
	DEC  shift 52
	FOR  shift 53
	RETURN  shift 54
	'!'  shift 55
	'('  shift 56
	'{'  shift 57
	'}'  reduce 8

	$$3  goto 58
	exp  goto 59
	cmd  goto 60


state 38
	funcDecl : type ID '(' paramList ')' '{' $$4 . dList lcmd $$5 '}'  (24)
	dList : .  (11)

	INT  shift 3
	FLOAT  shift 4
	BOOL  shift 5
	ID  reduce 11
	NUM  reduce 11
	READ  reduce 11
	WRITE  reduce 11
	IF  reduce 11
	INC  reduce 11
	BREAK  reduce 11
	CONTINUE  reduce 11
	WHILE  reduce 11
	TRUE  reduce 11
	FALSE  reduce 11
	DO  reduce 11
	DEC  reduce 11
	FOR  reduce 11
	RETURN  reduce 11
	'!'  reduce 11
	'('  reduce 11
	'{'  reduce 11
	'}'  reduce 11

	type  goto 6
	dList  goto 61
	decl  goto 8


state 39
	paramList : paramList ',' type ID .  (16)

	.  reduce 16


state 40
	cmd : ID . '[' exp ']' '=' exp ';'  (35)
	exp : ID .  (63)
	exp : ID . '=' exp  (79)
	exp : ID . INC  (80)
	exp : ID . DEC  (82)
	exp : ID . PLUSE exp  (84)
	exp : ID . '[' exp ']'  (88)
	exp : ID . '(' argList ')'  (89)

	INC  shift 62
	DEC  shift 63
	PLUSE  shift 64
	'='  shift 65
	'('  shift 66
	'['  shift 67
	EQ  reduce 63
	LEQ  reduce 63
	GEQ  reduce 63
	NEQ  reduce 63
	AND  reduce 63
	OR  reduce 63
	'?'  reduce 63
	'>'  reduce 63
	'<'  reduce 63
	'+'  reduce 63
	'-'  reduce 63
	'*'  reduce 63
	'/'  reduce 63
	'%'  reduce 63
	';'  reduce 63


state 41
	exp : NUM .  (60)

	.  reduce 60


state 42
	cmd : READ . '(' ID ')' ';'  (36)

	'('  shift 68
	.  error


state 43
	cmd : WRITE . '(' LIT ')' ';'  (32)
	cmd : WRITE . '(' LIT $$6 ',' exp ')' ';'  (34)

	'('  shift 69
	.  error


state 44
	cmd : IF . '(' exp $$9 ')' cmd restoIf  (41)

	'('  shift 70
	.  error


state 45
	exp : INC . ID  (81)

	ID  shift 71
	.  error


state 46
	cmd : BREAK . ';'  (46)

	';'  shift 72
	.  error


state 47
	cmd : CONTINUE . ';'  (45)

	';'  shift 73
	.  error


state 48
	cmd : WHILE . $$7 '(' exp ')' $$8 cmd  (39)
	$$7 : .  (37)

	.  reduce 37

	$$7  goto 74


state 49
	exp : TRUE .  (61)

	.  reduce 61


state 50
	exp : FALSE .  (62)

	.  reduce 62


state 51
	cmd : DO . $$10 cmd WHILE '(' exp ')' ';' $$11  (44)
	$$10 : .  (42)

	.  reduce 42

	$$10  goto 75


state 52
	exp : DEC . ID  (83)

	ID  shift 76
	.  error


state 53
	cmd : FOR . '(' expOpc ';' $$12 expOpcL ';' $$13 expOpc ')' $$14 cmd  (50)

	'('  shift 77
	.  error


state 54
	cmd : RETURN . NUM ';'  (51)
	cmd : RETURN . exp ';'  (52)

	ID  shift 78
	NUM  shift 79
	INC  shift 45
	TRUE  shift 49
	FALSE  shift 50
	DEC  shift 52
	'!'  shift 55
	'('  shift 56
	.  error

	exp  goto 80


state 55
	exp : '!' . exp  (65)

	ID  shift 78
	NUM  shift 41
	INC  shift 45
	TRUE  shift 49
	FALSE  shift 50
	DEC  shift 52
	'!'  shift 55
	'('  shift 56
	.  error

	exp  goto 81


state 56
	exp : '(' . exp ')'  (64)

	ID  shift 78
	NUM  shift 41
	INC  shift 45
	TRUE  shift 49
	FALSE  shift 50
	DEC  shift 52
	'!'  shift 55
	'('  shift 56
	.  error

	exp  goto 82


state 57
	cmd : '{' . lcmd '}'  (30)
	lcmd : .  (29)

	.  reduce 29

	lcmd  goto 83


state 58
	mainF : VOID MAIN '(' ')' $$2 '{' lcmd $$3 . '}'  (9)

	'}'  shift 84
	.  error


state 59
	cmd : exp . ';'  (31)
	exp : exp . '+' exp  (66)
	exp : exp . '-' exp  (67)
	exp : exp . '*' exp  (68)
	exp : exp . '/' exp  (69)
	exp : exp . '%' exp  (70)
	exp : exp . '>' exp  (71)
	exp : exp . '<' exp  (72)
	exp : exp . EQ exp  (73)
	exp : exp . LEQ exp  (74)
	exp : exp . GEQ exp  (75)
	exp : exp . NEQ exp  (76)
	exp : exp . OR exp  (77)
	exp : exp . AND exp  (78)
	exp : exp . '?' $$16 exp $$17 ':' exp  (87)

	EQ  shift 85
	LEQ  shift 86
	GEQ  shift 87
	NEQ  shift 88
	AND  shift 89
	OR  shift 90
	'?'  shift 91
	'>'  shift 92
	'<'  shift 93
	'+'  shift 94
	'-'  shift 95
	'*'  shift 96
	'/'  shift 97
	'%'  shift 98
	';'  shift 99
	.  error


state 60
	lcmd : lcmd cmd .  (28)

	.  reduce 28


state 61
	funcDecl : type ID '(' paramList ')' '{' $$4 dList . lcmd $$5 '}'  (24)
	lcmd : .  (29)

	.  reduce 29

	lcmd  goto 100


state 62
	exp : ID INC .  (80)

	.  reduce 80


state 63
	exp : ID DEC .  (82)

	.  reduce 82


state 64
	exp : ID PLUSE . exp  (84)

	ID  shift 78
	NUM  shift 41
	INC  shift 45
	TRUE  shift 49
	FALSE  shift 50
	DEC  shift 52
	'!'  shift 55
	'('  shift 56
	.  error

	exp  goto 101


state 65
	exp : ID '=' . exp  (79)

	ID  shift 78
	NUM  shift 41
	INC  shift 45
	TRUE  shift 49
	FALSE  shift 50
	DEC  shift 52
	'!'  shift 55
	'('  shift 56
	.  error

	exp  goto 102


state 66
	exp : ID '(' . argList ')'  (89)
	argList : .  (21)

	ID  shift 78
	NUM  shift 41
	INC  shift 45
	TRUE  shift 49
	FALSE  shift 50
	DEC  shift 52
	'!'  shift 55
	'('  shift 56
	')'  reduce 21
	','  reduce 21

	argList  goto 103
	exp  goto 104


state 67
	cmd : ID '[' . exp ']' '=' exp ';'  (35)
	exp : ID '[' . exp ']'  (88)

	ID  shift 78
	NUM  shift 41
	INC  shift 45
	TRUE  shift 49
	FALSE  shift 50
	DEC  shift 52
	'!'  shift 55
	'('  shift 56
	.  error

	exp  goto 105


state 68
	cmd : READ '(' . ID ')' ';'  (36)

	ID  shift 106
	.  error


state 69
	cmd : WRITE '(' . LIT ')' ';'  (32)
	cmd : WRITE '(' . LIT $$6 ',' exp ')' ';'  (34)

	LIT  shift 107
	.  error


state 70
	cmd : IF '(' . exp $$9 ')' cmd restoIf  (41)

	ID  shift 78
	NUM  shift 41
	INC  shift 45
	TRUE  shift 49
	FALSE  shift 50
	DEC  shift 52
	'!'  shift 55
	'('  shift 56
	.  error

	exp  goto 108


state 71
	exp : INC ID .  (81)

	.  reduce 81


state 72
	cmd : BREAK ';' .  (46)

	.  reduce 46


state 73
	cmd : CONTINUE ';' .  (45)

	.  reduce 45


state 74
	cmd : WHILE $$7 . '(' exp ')' $$8 cmd  (39)

	'('  shift 109
	.  error


state 75
	cmd : DO $$10 . cmd WHILE '(' exp ')' ';' $$11  (44)

	ID  shift 40
	NUM  shift 41
	READ  shift 42
	WRITE  shift 43
	IF  shift 44
	INC  shift 45
	BREAK  shift 46
	CONTINUE  shift 47
	WHILE  shift 48
	TRUE  shift 49
	FALSE  shift 50
	DO  shift 51
	DEC  shift 52
	FOR  shift 53
	RETURN  shift 54
	'!'  shift 55
	'('  shift 56
	'{'  shift 57
	.  error

	exp  goto 59
	cmd  goto 110


state 76
	exp : DEC ID .  (83)

	.  reduce 83


state 77
	cmd : FOR '(' . expOpc ';' $$12 expOpcL ';' $$13 expOpc ')' $$14 cmd  (50)
	expOpc : .  (54)

	ID  shift 78
	NUM  shift 41
	INC  shift 45
	TRUE  shift 49
	FALSE  shift 50
	DEC  shift 52
	'!'  shift 55
	'('  shift 56
	';'  reduce 54

	exp  goto 111
	expOpc  goto 112


state 78
	exp : ID .  (63)
	exp : ID . '=' exp  (79)
	exp : ID . INC  (80)
	exp : ID . DEC  (82)
	exp : ID . PLUSE exp  (84)
	exp : ID . '[' exp ']'  (88)
	exp : ID . '(' argList ')'  (89)

	INC  shift 62
	DEC  shift 63
	PLUSE  shift 64
	'='  shift 65
	'('  shift 66
	'['  shift 113
	EQ  reduce 63
	LEQ  reduce 63
	GEQ  reduce 63
	NEQ  reduce 63
	AND  reduce 63
	OR  reduce 63
	'?'  reduce 63
	':'  reduce 63
	'>'  reduce 63
	'<'  reduce 63
	'+'  reduce 63
	'-'  reduce 63
	'*'  reduce 63
	'/'  reduce 63
	'%'  reduce 63
	')'  reduce 63
	';'  reduce 63
	']'  reduce 63
	','  reduce 63


79: shift/reduce conflict (shift 114, reduce 60) on ';'
state 79
	cmd : RETURN NUM . ';'  (51)
	exp : NUM .  (60)

	';'  shift 114
	EQ  reduce 60
	LEQ  reduce 60
	GEQ  reduce 60
	NEQ  reduce 60
	AND  reduce 60
	OR  reduce 60
	'?'  reduce 60
	'>'  reduce 60
	'<'  reduce 60
	'+'  reduce 60
	'-'  reduce 60
	'*'  reduce 60
	'/'  reduce 60
	'%'  reduce 60


state 80
	cmd : RETURN exp . ';'  (52)
	exp : exp . '+' exp  (66)
	exp : exp . '-' exp  (67)
	exp : exp . '*' exp  (68)
	exp : exp . '/' exp  (69)
	exp : exp . '%' exp  (70)
	exp : exp . '>' exp  (71)
	exp : exp . '<' exp  (72)
	exp : exp . EQ exp  (73)
	exp : exp . LEQ exp  (74)
	exp : exp . GEQ exp  (75)
	exp : exp . NEQ exp  (76)
	exp : exp . OR exp  (77)
	exp : exp . AND exp  (78)
	exp : exp . '?' $$16 exp $$17 ':' exp  (87)

	EQ  shift 85
	LEQ  shift 86
	GEQ  shift 87
	NEQ  shift 88
	AND  shift 89
	OR  shift 90
	'?'  shift 91
	'>'  shift 92
	'<'  shift 93
	'+'  shift 94
	'-'  shift 95
	'*'  shift 96
	'/'  shift 97
	'%'  shift 98
	';'  shift 115
	.  error


state 81
	exp : '!' exp .  (65)
	exp : exp . '+' exp  (66)
	exp : exp . '-' exp  (67)
	exp : exp . '*' exp  (68)
	exp : exp . '/' exp  (69)
	exp : exp . '%' exp  (70)
	exp : exp . '>' exp  (71)
	exp : exp . '<' exp  (72)
	exp : exp . EQ exp  (73)
	exp : exp . LEQ exp  (74)
	exp : exp . GEQ exp  (75)
	exp : exp . NEQ exp  (76)
	exp : exp . OR exp  (77)
	exp : exp . AND exp  (78)
	exp : exp . '?' $$16 exp $$17 ':' exp  (87)

	.  reduce 65


state 82
	exp : '(' exp . ')'  (64)
	exp : exp . '+' exp  (66)
	exp : exp . '-' exp  (67)
	exp : exp . '*' exp  (68)
	exp : exp . '/' exp  (69)
	exp : exp . '%' exp  (70)
	exp : exp . '>' exp  (71)
	exp : exp . '<' exp  (72)
	exp : exp . EQ exp  (73)
	exp : exp . LEQ exp  (74)
	exp : exp . GEQ exp  (75)
	exp : exp . NEQ exp  (76)
	exp : exp . OR exp  (77)
	exp : exp . AND exp  (78)
	exp : exp . '?' $$16 exp $$17 ':' exp  (87)

	EQ  shift 85
	LEQ  shift 86
	GEQ  shift 87
	NEQ  shift 88
	AND  shift 89
	OR  shift 90
	'?'  shift 91
	'>'  shift 92
	'<'  shift 93
	'+'  shift 94
	'-'  shift 95
	'*'  shift 96
	'/'  shift 97
	'%'  shift 98
	')'  shift 116
	.  error


state 83
	lcmd : lcmd . cmd  (28)
	cmd : '{' lcmd . '}'  (30)

	ID  shift 40
	NUM  shift 41
	READ  shift 42
	WRITE  shift 43
	IF  shift 44
	INC  shift 45
	BREAK  shift 46
	CONTINUE  shift 47
	WHILE  shift 48
	TRUE  shift 49
	FALSE  shift 50
	DO  shift 51
	DEC  shift 52
	FOR  shift 53
	RETURN  shift 54
	'!'  shift 55
	'('  shift 56
	'{'  shift 57
	'}'  shift 117
	.  error

	exp  goto 59
	cmd  goto 60


state 84
	mainF : VOID MAIN '(' ')' $$2 '{' lcmd $$3 '}' .  (9)

	.  reduce 9


state 85
	exp : exp EQ . exp  (73)

	ID  shift 78
	NUM  shift 41
	INC  shift 45
	TRUE  shift 49
	FALSE  shift 50
	DEC  shift 52
	'!'  shift 55
	'('  shift 56
	.  error

	exp  goto 118


state 86
	exp : exp LEQ . exp  (74)

	ID  shift 78
	NUM  shift 41
	INC  shift 45
	TRUE  shift 49
	FALSE  shift 50
	DEC  shift 52
	'!'  shift 55
	'('  shift 56
	.  error

	exp  goto 119


state 87
	exp : exp GEQ . exp  (75)

	ID  shift 78
	NUM  shift 41
	INC  shift 45
	TRUE  shift 49
	FALSE  shift 50
	DEC  shift 52
	'!'  shift 55
	'('  shift 56
	.  error

	exp  goto 120


state 88
	exp : exp NEQ . exp  (76)

	ID  shift 78
	NUM  shift 41
	INC  shift 45
	TRUE  shift 49
	FALSE  shift 50
	DEC  shift 52
	'!'  shift 55
	'('  shift 56
	.  error

	exp  goto 121


state 89
	exp : exp AND . exp  (78)

	ID  shift 78
	NUM  shift 41
	INC  shift 45
	TRUE  shift 49
	FALSE  shift 50
	DEC  shift 52
	'!'  shift 55
	'('  shift 56
	.  error

	exp  goto 122


state 90
	exp : exp OR . exp  (77)

	ID  shift 78
	NUM  shift 41
	INC  shift 45
	TRUE  shift 49
	FALSE  shift 50
	DEC  shift 52
	'!'  shift 55
	'('  shift 56
	.  error

	exp  goto 123


state 91
	exp : exp '?' . $$16 exp $$17 ':' exp  (87)
	$$16 : .  (85)

	.  reduce 85

	$$16  goto 124


state 92
	exp : exp '>' . exp  (71)

	ID  shift 78
	NUM  shift 41
	INC  shift 45
	TRUE  shift 49
	FALSE  shift 50
	DEC  shift 52
	'!'  shift 55
	'('  shift 56
	.  error

	exp  goto 125


state 93
	exp : exp '<' . exp  (72)

	ID  shift 78
	NUM  shift 41
	INC  shift 45
	TRUE  shift 49
	FALSE  shift 50
	DEC  shift 52
	'!'  shift 55
	'('  shift 56
	.  error

	exp  goto 126


state 94
	exp : exp '+' . exp  (66)

	ID  shift 78
	NUM  shift 41
	INC  shift 45
	TRUE  shift 49
	FALSE  shift 50
	DEC  shift 52
	'!'  shift 55
	'('  shift 56
	.  error

	exp  goto 127


state 95
	exp : exp '-' . exp  (67)

	ID  shift 78
	NUM  shift 41
	INC  shift 45
	TRUE  shift 49
	FALSE  shift 50
	DEC  shift 52
	'!'  shift 55
	'('  shift 56
	.  error

	exp  goto 128


state 96
	exp : exp '*' . exp  (68)

	ID  shift 78
	NUM  shift 41
	INC  shift 45
	TRUE  shift 49
	FALSE  shift 50
	DEC  shift 52
	'!'  shift 55
	'('  shift 56
	.  error

	exp  goto 129


state 97
	exp : exp '/' . exp  (69)

	ID  shift 78
	NUM  shift 41
	INC  shift 45
	TRUE  shift 49
	FALSE  shift 50
	DEC  shift 52
	'!'  shift 55
	'('  shift 56
	.  error

	exp  goto 130


state 98
	exp : exp '%' . exp  (70)

	ID  shift 78
	NUM  shift 41
	INC  shift 45
	TRUE  shift 49
	FALSE  shift 50
	DEC  shift 52
	'!'  shift 55
	'('  shift 56
	.  error

	exp  goto 131


state 99
	cmd : exp ';' .  (31)

	.  reduce 31


state 100
	funcDecl : type ID '(' paramList ')' '{' $$4 dList lcmd . $$5 '}'  (24)
	lcmd : lcmd . cmd  (28)
	$$5 : .  (23)

	ID  shift 40
	NUM  shift 41
	READ  shift 42
	WRITE  shift 43
	IF  shift 44
	INC  shift 45
	BREAK  shift 46
	CONTINUE  shift 47
	WHILE  shift 48
	TRUE  shift 49
	FALSE  shift 50
	DO  shift 51
	DEC  shift 52
	FOR  shift 53
	RETURN  shift 54
	'!'  shift 55
	'('  shift 56
	'{'  shift 57
	'}'  reduce 23

	exp  goto 59
	$$5  goto 132
	cmd  goto 60


state 101
	exp : exp . '+' exp  (66)
	exp : exp . '-' exp  (67)
	exp : exp . '*' exp  (68)
	exp : exp . '/' exp  (69)
	exp : exp . '%' exp  (70)
	exp : exp . '>' exp  (71)
	exp : exp . '<' exp  (72)
	exp : exp . EQ exp  (73)
	exp : exp . LEQ exp  (74)
	exp : exp . GEQ exp  (75)
	exp : exp . NEQ exp  (76)
	exp : exp . OR exp  (77)
	exp : exp . AND exp  (78)
	exp : ID PLUSE exp .  (84)
	exp : exp . '?' $$16 exp $$17 ':' exp  (87)

	EQ  shift 85
	LEQ  shift 86
	GEQ  shift 87
	NEQ  shift 88
	AND  shift 89
	OR  shift 90
	'?'  shift 91
	'>'  shift 92
	'<'  shift 93
	'+'  shift 94
	'-'  shift 95
	'*'  shift 96
	'/'  shift 97
	'%'  shift 98
	':'  reduce 84
	')'  reduce 84
	';'  reduce 84
	']'  reduce 84
	','  reduce 84


state 102
	exp : exp . '+' exp  (66)
	exp : exp . '-' exp  (67)
	exp : exp . '*' exp  (68)
	exp : exp . '/' exp  (69)
	exp : exp . '%' exp  (70)
	exp : exp . '>' exp  (71)
	exp : exp . '<' exp  (72)
	exp : exp . EQ exp  (73)
	exp : exp . LEQ exp  (74)
	exp : exp . GEQ exp  (75)
	exp : exp . NEQ exp  (76)
	exp : exp . OR exp  (77)
	exp : exp . AND exp  (78)
	exp : ID '=' exp .  (79)
	exp : exp . '?' $$16 exp $$17 ':' exp  (87)

	EQ  shift 85
	LEQ  shift 86
	GEQ  shift 87
	NEQ  shift 88
	AND  shift 89
	OR  shift 90
	'?'  shift 91
	'>'  shift 92
	'<'  shift 93
	'+'  shift 94
	'-'  shift 95
	'*'  shift 96
	'/'  shift 97
	'%'  shift 98
	':'  reduce 79
	')'  reduce 79
	';'  reduce 79
	']'  reduce 79
	','  reduce 79


state 103
	argList : argList . ',' exp  (19)
	exp : ID '(' argList . ')'  (89)

	')'  shift 133
	','  shift 134
	.  error


state 104
	argList : exp .  (20)
	exp : exp . '+' exp  (66)
	exp : exp . '-' exp  (67)
	exp : exp . '*' exp  (68)
	exp : exp . '/' exp  (69)
	exp : exp . '%' exp  (70)
	exp : exp . '>' exp  (71)
	exp : exp . '<' exp  (72)
	exp : exp . EQ exp  (73)
	exp : exp . LEQ exp  (74)
	exp : exp . GEQ exp  (75)
	exp : exp . NEQ exp  (76)
	exp : exp . OR exp  (77)
	exp : exp . AND exp  (78)
	exp : exp . '?' $$16 exp $$17 ':' exp  (87)

	EQ  shift 85
	LEQ  shift 86
	GEQ  shift 87
	NEQ  shift 88
	AND  shift 89
	OR  shift 90
	'?'  shift 91
	'>'  shift 92
	'<'  shift 93
	'+'  shift 94
	'-'  shift 95
	'*'  shift 96
	'/'  shift 97
	'%'  shift 98
	')'  reduce 20
	','  reduce 20


state 105
	cmd : ID '[' exp . ']' '=' exp ';'  (35)
	exp : exp . '+' exp  (66)
	exp : exp . '-' exp  (67)
	exp : exp . '*' exp  (68)
	exp : exp . '/' exp  (69)
	exp : exp . '%' exp  (70)
	exp : exp . '>' exp  (71)
	exp : exp . '<' exp  (72)
	exp : exp . EQ exp  (73)
	exp : exp . LEQ exp  (74)
	exp : exp . GEQ exp  (75)
	exp : exp . NEQ exp  (76)
	exp : exp . OR exp  (77)
	exp : exp . AND exp  (78)
	exp : exp . '?' $$16 exp $$17 ':' exp  (87)
	exp : ID '[' exp . ']'  (88)

	EQ  shift 85
	LEQ  shift 86
	GEQ  shift 87
	NEQ  shift 88
	AND  shift 89
	OR  shift 90
	'?'  shift 91
	'>'  shift 92
	'<'  shift 93
	'+'  shift 94
	'-'  shift 95
	'*'  shift 96
	'/'  shift 97
	'%'  shift 98
	']'  shift 135
	.  error


state 106
	cmd : READ '(' ID . ')' ';'  (36)

	')'  shift 136
	.  error


state 107
	cmd : WRITE '(' LIT . ')' ';'  (32)
	cmd : WRITE '(' LIT . $$6 ',' exp ')' ';'  (34)
	$$6 : .  (33)

	')'  shift 137
	','  reduce 33

	$$6  goto 138


state 108
	cmd : IF '(' exp . $$9 ')' cmd restoIf  (41)
	exp : exp . '+' exp  (66)
	exp : exp . '-' exp  (67)
	exp : exp . '*' exp  (68)
	exp : exp . '/' exp  (69)
	exp : exp . '%' exp  (70)
	exp : exp . '>' exp  (71)
	exp : exp . '<' exp  (72)
	exp : exp . EQ exp  (73)
	exp : exp . LEQ exp  (74)
	exp : exp . GEQ exp  (75)
	exp : exp . NEQ exp  (76)
	exp : exp . OR exp  (77)
	exp : exp . AND exp  (78)
	exp : exp . '?' $$16 exp $$17 ':' exp  (87)
	$$9 : .  (40)

	EQ  shift 85
	LEQ  shift 86
	GEQ  shift 87
	NEQ  shift 88
	AND  shift 89
	OR  shift 90
	'?'  shift 91
	'>'  shift 92
	'<'  shift 93
	'+'  shift 94
	'-'  shift 95
	'*'  shift 96
	'/'  shift 97
	'%'  shift 98
	')'  reduce 40

	$$9  goto 139


state 109
	cmd : WHILE $$7 '(' . exp ')' $$8 cmd  (39)

	ID  shift 78
	NUM  shift 41
	INC  shift 45
	TRUE  shift 49
	FALSE  shift 50
	DEC  shift 52
	'!'  shift 55
	'('  shift 56
	.  error

	exp  goto 140


state 110
	cmd : DO $$10 cmd . WHILE '(' exp ')' ';' $$11  (44)

	WHILE  shift 141
	.  error


state 111
	expOpc : exp .  (53)
	exp : exp . '+' exp  (66)
	exp : exp . '-' exp  (67)
	exp : exp . '*' exp  (68)
	exp : exp . '/' exp  (69)
	exp : exp . '%' exp  (70)
	exp : exp . '>' exp  (71)
	exp : exp . '<' exp  (72)
	exp : exp . EQ exp  (73)
	exp : exp . LEQ exp  (74)
	exp : exp . GEQ exp  (75)
	exp : exp . NEQ exp  (76)
	exp : exp . OR exp  (77)
	exp : exp . AND exp  (78)
	exp : exp . '?' $$16 exp $$17 ':' exp  (87)

	EQ  shift 85
	LEQ  shift 86
	GEQ  shift 87
	NEQ  shift 88
	AND  shift 89
	OR  shift 90
	'?'  shift 91
	'>'  shift 92
	'<'  shift 93
	'+'  shift 94
	'-'  shift 95
	'*'  shift 96
	'/'  shift 97
	'%'  shift 98
	')'  reduce 53
	';'  reduce 53


state 112
	cmd : FOR '(' expOpc . ';' $$12 expOpcL ';' $$13 expOpc ')' $$14 cmd  (50)

	';'  shift 142
	.  error


state 113
	exp : ID '[' . exp ']'  (88)

	ID  shift 78
	NUM  shift 41
	INC  shift 45
	TRUE  shift 49
	FALSE  shift 50
	DEC  shift 52
	'!'  shift 55
	'('  shift 56
	.  error

	exp  goto 143


state 114
	cmd : RETURN NUM ';' .  (51)

	.  reduce 51


state 115
	cmd : RETURN exp ';' .  (52)

	.  reduce 52


state 116
	exp : '(' exp ')' .  (64)

	.  reduce 64


state 117
	cmd : '{' lcmd '}' .  (30)

	.  reduce 30


state 118
	exp : exp . '+' exp  (66)
	exp : exp . '-' exp  (67)
	exp : exp . '*' exp  (68)
	exp : exp . '/' exp  (69)
	exp : exp . '%' exp  (70)
	exp : exp . '>' exp  (71)
	exp : exp . '<' exp  (72)
	exp : exp . EQ exp  (73)
	exp : exp EQ exp .  (73)
	exp : exp . LEQ exp  (74)
	exp : exp . GEQ exp  (75)
	exp : exp . NEQ exp  (76)
	exp : exp . OR exp  (77)
	exp : exp . AND exp  (78)
	exp : exp . '?' $$16 exp $$17 ':' exp  (87)

	'+'  shift 94
	'-'  shift 95
	'*'  shift 96
	'/'  shift 97
	'%'  shift 98
	EQ  reduce 73
	LEQ  reduce 73
	GEQ  reduce 73
	NEQ  reduce 73
	AND  reduce 73
	OR  reduce 73
	'?'  reduce 73
	':'  reduce 73
	'>'  reduce 73
	'<'  reduce 73
	')'  reduce 73
	';'  reduce 73
	']'  reduce 73
	','  reduce 73


state 119
	exp : exp . '+' exp  (66)
	exp : exp . '-' exp  (67)
	exp : exp . '*' exp  (68)
	exp : exp . '/' exp  (69)
	exp : exp . '%' exp  (70)
	exp : exp . '>' exp  (71)
	exp : exp . '<' exp  (72)
	exp : exp . EQ exp  (73)
	exp : exp . LEQ exp  (74)
	exp : exp LEQ exp .  (74)
	exp : exp . GEQ exp  (75)
	exp : exp . NEQ exp  (76)
	exp : exp . OR exp  (77)
	exp : exp . AND exp  (78)
	exp : exp . '?' $$16 exp $$17 ':' exp  (87)

	'+'  shift 94
	'-'  shift 95
	'*'  shift 96
	'/'  shift 97
	'%'  shift 98
	EQ  reduce 74
	LEQ  reduce 74
	GEQ  reduce 74
	NEQ  reduce 74
	AND  reduce 74
	OR  reduce 74
	'?'  reduce 74
	':'  reduce 74
	'>'  reduce 74
	'<'  reduce 74
	')'  reduce 74
	';'  reduce 74
	']'  reduce 74
	','  reduce 74


state 120
	exp : exp . '+' exp  (66)
	exp : exp . '-' exp  (67)
	exp : exp . '*' exp  (68)
	exp : exp . '/' exp  (69)
	exp : exp . '%' exp  (70)
	exp : exp . '>' exp  (71)
	exp : exp . '<' exp  (72)
	exp : exp . EQ exp  (73)
	exp : exp . LEQ exp  (74)
	exp : exp . GEQ exp  (75)
	exp : exp GEQ exp .  (75)
	exp : exp . NEQ exp  (76)
	exp : exp . OR exp  (77)
	exp : exp . AND exp  (78)
	exp : exp . '?' $$16 exp $$17 ':' exp  (87)

	'+'  shift 94
	'-'  shift 95
	'*'  shift 96
	'/'  shift 97
	'%'  shift 98
	EQ  reduce 75
	LEQ  reduce 75
	GEQ  reduce 75
	NEQ  reduce 75
	AND  reduce 75
	OR  reduce 75
	'?'  reduce 75
	':'  reduce 75
	'>'  reduce 75
	'<'  reduce 75
	')'  reduce 75
	';'  reduce 75
	']'  reduce 75
	','  reduce 75


state 121
	exp : exp . '+' exp  (66)
	exp : exp . '-' exp  (67)
	exp : exp . '*' exp  (68)
	exp : exp . '/' exp  (69)
	exp : exp . '%' exp  (70)
	exp : exp . '>' exp  (71)
	exp : exp . '<' exp  (72)
	exp : exp . EQ exp  (73)
	exp : exp . LEQ exp  (74)
	exp : exp . GEQ exp  (75)
	exp : exp . NEQ exp  (76)
	exp : exp NEQ exp .  (76)
	exp : exp . OR exp  (77)
	exp : exp . AND exp  (78)
	exp : exp . '?' $$16 exp $$17 ':' exp  (87)

	'+'  shift 94
	'-'  shift 95
	'*'  shift 96
	'/'  shift 97
	'%'  shift 98
	EQ  reduce 76
	LEQ  reduce 76
	GEQ  reduce 76
	NEQ  reduce 76
	AND  reduce 76
	OR  reduce 76
	'?'  reduce 76
	':'  reduce 76
	'>'  reduce 76
	'<'  reduce 76
	')'  reduce 76
	';'  reduce 76
	']'  reduce 76
	','  reduce 76


state 122
	exp : exp . '+' exp  (66)
	exp : exp . '-' exp  (67)
	exp : exp . '*' exp  (68)
	exp : exp . '/' exp  (69)
	exp : exp . '%' exp  (70)
	exp : exp . '>' exp  (71)
	exp : exp . '<' exp  (72)
	exp : exp . EQ exp  (73)
	exp : exp . LEQ exp  (74)
	exp : exp . GEQ exp  (75)
	exp : exp . NEQ exp  (76)
	exp : exp . OR exp  (77)
	exp : exp . AND exp  (78)
	exp : exp AND exp .  (78)
	exp : exp . '?' $$16 exp $$17 ':' exp  (87)

	EQ  shift 85
	LEQ  shift 86
	GEQ  shift 87
	NEQ  shift 88
	'>'  shift 92
	'<'  shift 93
	'+'  shift 94
	'-'  shift 95
	'*'  shift 96
	'/'  shift 97
	'%'  shift 98
	AND  reduce 78
	OR  reduce 78
	'?'  reduce 78
	':'  reduce 78
	')'  reduce 78
	';'  reduce 78
	']'  reduce 78
	','  reduce 78


state 123
	exp : exp . '+' exp  (66)
	exp : exp . '-' exp  (67)
	exp : exp . '*' exp  (68)
	exp : exp . '/' exp  (69)
	exp : exp . '%' exp  (70)
	exp : exp . '>' exp  (71)
	exp : exp . '<' exp  (72)
	exp : exp . EQ exp  (73)
	exp : exp . LEQ exp  (74)
	exp : exp . GEQ exp  (75)
	exp : exp . NEQ exp  (76)
	exp : exp . OR exp  (77)
	exp : exp OR exp .  (77)
	exp : exp . AND exp  (78)
	exp : exp . '?' $$16 exp $$17 ':' exp  (87)

	EQ  shift 85
	LEQ  shift 86
	GEQ  shift 87
	NEQ  shift 88
	AND  shift 89
	'>'  shift 92
	'<'  shift 93
	'+'  shift 94
	'-'  shift 95
	'*'  shift 96
	'/'  shift 97
	'%'  shift 98
	OR  reduce 77
	'?'  reduce 77
	':'  reduce 77
	')'  reduce 77
	';'  reduce 77
	']'  reduce 77
	','  reduce 77


state 124
	exp : exp '?' $$16 . exp $$17 ':' exp  (87)

	ID  shift 78
	NUM  shift 41
	INC  shift 45
	TRUE  shift 49
	FALSE  shift 50
	DEC  shift 52
	'!'  shift 55
	'('  shift 56
	.  error

	exp  goto 144


state 125
	exp : exp . '+' exp  (66)
	exp : exp . '-' exp  (67)
	exp : exp . '*' exp  (68)
	exp : exp . '/' exp  (69)
	exp : exp . '%' exp  (70)
	exp : exp . '>' exp  (71)
	exp : exp '>' exp .  (71)
	exp : exp . '<' exp  (72)
	exp : exp . EQ exp  (73)
	exp : exp . LEQ exp  (74)
	exp : exp . GEQ exp  (75)
	exp : exp . NEQ exp  (76)
	exp : exp . OR exp  (77)
	exp : exp . AND exp  (78)
	exp : exp . '?' $$16 exp $$17 ':' exp  (87)

	'+'  shift 94
	'-'  shift 95
	'*'  shift 96
	'/'  shift 97
	'%'  shift 98
	EQ  reduce 71
	LEQ  reduce 71
	GEQ  reduce 71
	NEQ  reduce 71
	AND  reduce 71
	OR  reduce 71
	'?'  reduce 71
	':'  reduce 71
	'>'  reduce 71
	'<'  reduce 71
	')'  reduce 71
	';'  reduce 71
	']'  reduce 71
	','  reduce 71


state 126
	exp : exp . '+' exp  (66)
	exp : exp . '-' exp  (67)
	exp : exp . '*' exp  (68)
	exp : exp . '/' exp  (69)
	exp : exp . '%' exp  (70)
	exp : exp . '>' exp  (71)
	exp : exp . '<' exp  (72)
	exp : exp '<' exp .  (72)
	exp : exp . EQ exp  (73)
	exp : exp . LEQ exp  (74)
	exp : exp . GEQ exp  (75)
	exp : exp . NEQ exp  (76)
	exp : exp . OR exp  (77)
	exp : exp . AND exp  (78)
	exp : exp . '?' $$16 exp $$17 ':' exp  (87)

	'+'  shift 94
	'-'  shift 95
	'*'  shift 96
	'/'  shift 97
	'%'  shift 98
	EQ  reduce 72
	LEQ  reduce 72
	GEQ  reduce 72
	NEQ  reduce 72
	AND  reduce 72
	OR  reduce 72
	'?'  reduce 72
	':'  reduce 72
	'>'  reduce 72
	'<'  reduce 72
	')'  reduce 72
	';'  reduce 72
	']'  reduce 72
	','  reduce 72


state 127
	exp : exp . '+' exp  (66)
	exp : exp '+' exp .  (66)
	exp : exp . '-' exp  (67)
	exp : exp . '*' exp  (68)
	exp : exp . '/' exp  (69)
	exp : exp . '%' exp  (70)
	exp : exp . '>' exp  (71)
	exp : exp . '<' exp  (72)
	exp : exp . EQ exp  (73)
	exp : exp . LEQ exp  (74)
	exp : exp . GEQ exp  (75)
	exp : exp . NEQ exp  (76)
	exp : exp . OR exp  (77)
	exp : exp . AND exp  (78)
	exp : exp . '?' $$16 exp $$17 ':' exp  (87)

	'*'  shift 96
	'/'  shift 97
	'%'  shift 98
	EQ  reduce 66
	LEQ  reduce 66
	GEQ  reduce 66
	NEQ  reduce 66
	AND  reduce 66
	OR  reduce 66
	'?'  reduce 66
	':'  reduce 66
	'>'  reduce 66
	'<'  reduce 66
	'+'  reduce 66
	'-'  reduce 66
	')'  reduce 66
	';'  reduce 66
	']'  reduce 66
	','  reduce 66


state 128
	exp : exp . '+' exp  (66)
	exp : exp . '-' exp  (67)
	exp : exp '-' exp .  (67)
	exp : exp . '*' exp  (68)
	exp : exp . '/' exp  (69)
	exp : exp . '%' exp  (70)
	exp : exp . '>' exp  (71)
	exp : exp . '<' exp  (72)
	exp : exp . EQ exp  (73)
	exp : exp . LEQ exp  (74)
	exp : exp . GEQ exp  (75)
	exp : exp . NEQ exp  (76)
	exp : exp . OR exp  (77)
	exp : exp . AND exp  (78)
	exp : exp . '?' $$16 exp $$17 ':' exp  (87)

	'*'  shift 96
	'/'  shift 97
	'%'  shift 98
	EQ  reduce 67
	LEQ  reduce 67
	GEQ  reduce 67
	NEQ  reduce 67
	AND  reduce 67
	OR  reduce 67
	'?'  reduce 67
	':'  reduce 67
	'>'  reduce 67
	'<'  reduce 67
	'+'  reduce 67
	'-'  reduce 67
	')'  reduce 67
	';'  reduce 67
	']'  reduce 67
	','  reduce 67


state 129
	exp : exp . '+' exp  (66)
	exp : exp . '-' exp  (67)
	exp : exp . '*' exp  (68)
	exp : exp '*' exp .  (68)
	exp : exp . '/' exp  (69)
	exp : exp . '%' exp  (70)
	exp : exp . '>' exp  (71)
	exp : exp . '<' exp  (72)
	exp : exp . EQ exp  (73)
	exp : exp . LEQ exp  (74)
	exp : exp . GEQ exp  (75)
	exp : exp . NEQ exp  (76)
	exp : exp . OR exp  (77)
	exp : exp . AND exp  (78)
	exp : exp . '?' $$16 exp $$17 ':' exp  (87)

	.  reduce 68


state 130
	exp : exp . '+' exp  (66)
	exp : exp . '-' exp  (67)
	exp : exp . '*' exp  (68)
	exp : exp . '/' exp  (69)
	exp : exp '/' exp .  (69)
	exp : exp . '%' exp  (70)
	exp : exp . '>' exp  (71)
	exp : exp . '<' exp  (72)
	exp : exp . EQ exp  (73)
	exp : exp . LEQ exp  (74)
	exp : exp . GEQ exp  (75)
	exp : exp . NEQ exp  (76)
	exp : exp . OR exp  (77)
	exp : exp . AND exp  (78)
	exp : exp . '?' $$16 exp $$17 ':' exp  (87)

	.  reduce 69


state 131
	exp : exp . '+' exp  (66)
	exp : exp . '-' exp  (67)
	exp : exp . '*' exp  (68)
	exp : exp . '/' exp  (69)
	exp : exp . '%' exp  (70)
	exp : exp '%' exp .  (70)
	exp : exp . '>' exp  (71)
	exp : exp . '<' exp  (72)
	exp : exp . EQ exp  (73)
	exp : exp . LEQ exp  (74)
	exp : exp . GEQ exp  (75)
	exp : exp . NEQ exp  (76)
	exp : exp . OR exp  (77)
	exp : exp . AND exp  (78)
	exp : exp . '?' $$16 exp $$17 ':' exp  (87)

	.  reduce 70


state 132
	funcDecl : type ID '(' paramList ')' '{' $$4 dList lcmd $$5 . '}'  (24)

	'}'  shift 145
	.  error


state 133
	exp : ID '(' argList ')' .  (89)

	.  reduce 89


state 134
	argList : argList ',' . exp  (19)

	ID  shift 78
	NUM  shift 41
	INC  shift 45
	TRUE  shift 49
	FALSE  shift 50
	DEC  shift 52
	'!'  shift 55
	'('  shift 56
	.  error

	exp  goto 146


state 135
	cmd : ID '[' exp ']' . '=' exp ';'  (35)
	exp : ID '[' exp ']' .  (88)

	'='  shift 147
	EQ  reduce 88
	LEQ  reduce 88
	GEQ  reduce 88
	NEQ  reduce 88
	AND  reduce 88
	OR  reduce 88
	'?'  reduce 88
	'>'  reduce 88
	'<'  reduce 88
	'+'  reduce 88
	'-'  reduce 88
	'*'  reduce 88
	'/'  reduce 88
	'%'  reduce 88
	';'  reduce 88


state 136
	cmd : READ '(' ID ')' . ';'  (36)

	';'  shift 148
	.  error


state 137
	cmd : WRITE '(' LIT ')' . ';'  (32)

	';'  shift 149
	.  error


state 138
	cmd : WRITE '(' LIT $$6 . ',' exp ')' ';'  (34)

	','  shift 150
	.  error


state 139
	cmd : IF '(' exp $$9 . ')' cmd restoIf  (41)

	')'  shift 151
	.  error


state 140
	cmd : WHILE $$7 '(' exp . ')' $$8 cmd  (39)
	exp : exp . '+' exp  (66)
	exp : exp . '-' exp  (67)
	exp : exp . '*' exp  (68)
	exp : exp . '/' exp  (69)
	exp : exp . '%' exp  (70)
	exp : exp . '>' exp  (71)
	exp : exp . '<' exp  (72)
	exp : exp . EQ exp  (73)
	exp : exp . LEQ exp  (74)
	exp : exp . GEQ exp  (75)
	exp : exp . NEQ exp  (76)
	exp : exp . OR exp  (77)
	exp : exp . AND exp  (78)
	exp : exp . '?' $$16 exp $$17 ':' exp  (87)

	EQ  shift 85
	LEQ  shift 86
	GEQ  shift 87
	NEQ  shift 88
	AND  shift 89
	OR  shift 90
	'?'  shift 91
	'>'  shift 92
	'<'  shift 93
	'+'  shift 94
	'-'  shift 95
	'*'  shift 96
	'/'  shift 97
	'%'  shift 98
	')'  shift 152
	.  error


state 141
	cmd : DO $$10 cmd WHILE . '(' exp ')' ';' $$11  (44)

	'('  shift 153
	.  error


state 142
	cmd : FOR '(' expOpc ';' . $$12 expOpcL ';' $$13 expOpc ')' $$14 cmd  (50)
	$$12 : .  (47)

	.  reduce 47

	$$12  goto 154


state 143
	exp : exp . '+' exp  (66)
	exp : exp . '-' exp  (67)
	exp : exp . '*' exp  (68)
	exp : exp . '/' exp  (69)
	exp : exp . '%' exp  (70)
	exp : exp . '>' exp  (71)
	exp : exp . '<' exp  (72)
	exp : exp . EQ exp  (73)
	exp : exp . LEQ exp  (74)
	exp : exp . GEQ exp  (75)
	exp : exp . NEQ exp  (76)
	exp : exp . OR exp  (77)
	exp : exp . AND exp  (78)
	exp : exp . '?' $$16 exp $$17 ':' exp  (87)
	exp : ID '[' exp . ']'  (88)

	EQ  shift 85
	LEQ  shift 86
	GEQ  shift 87
	NEQ  shift 88
	AND  shift 89
	OR  shift 90
	'?'  shift 91
	'>'  shift 92
	'<'  shift 93
	'+'  shift 94
	'-'  shift 95
	'*'  shift 96
	'/'  shift 97
	'%'  shift 98
	']'  shift 155
	.  error


state 144
	exp : exp . '+' exp  (66)
	exp : exp . '-' exp  (67)
	exp : exp . '*' exp  (68)
	exp : exp . '/' exp  (69)
	exp : exp . '%' exp  (70)
	exp : exp . '>' exp  (71)
	exp : exp . '<' exp  (72)
	exp : exp . EQ exp  (73)
	exp : exp . LEQ exp  (74)
	exp : exp . GEQ exp  (75)
	exp : exp . NEQ exp  (76)
	exp : exp . OR exp  (77)
	exp : exp . AND exp  (78)
	exp : exp . '?' $$16 exp $$17 ':' exp  (87)
	exp : exp '?' $$16 exp . $$17 ':' exp  (87)
	$$17 : .  (86)

	EQ  shift 85
	LEQ  shift 86
	GEQ  shift 87
	NEQ  shift 88
	AND  shift 89
	OR  shift 90
	'?'  shift 91
	'>'  shift 92
	'<'  shift 93
	'+'  shift 94
	'-'  shift 95
	'*'  shift 96
	'/'  shift 97
	'%'  shift 98
	':'  reduce 86

	$$17  goto 156


state 145
	funcDecl : type ID '(' paramList ')' '{' $$4 dList lcmd $$5 '}' .  (24)

	.  reduce 24


state 146
	argList : argList ',' exp .  (19)
	exp : exp . '+' exp  (66)
	exp : exp . '-' exp  (67)
	exp : exp . '*' exp  (68)
	exp : exp . '/' exp  (69)
	exp : exp . '%' exp  (70)
	exp : exp . '>' exp  (71)
	exp : exp . '<' exp  (72)
	exp : exp . EQ exp  (73)
	exp : exp . LEQ exp  (74)
	exp : exp . GEQ exp  (75)
	exp : exp . NEQ exp  (76)
	exp : exp . OR exp  (77)
	exp : exp . AND exp  (78)
	exp : exp . '?' $$16 exp $$17 ':' exp  (87)

	EQ  shift 85
	LEQ  shift 86
	GEQ  shift 87
	NEQ  shift 88
	AND  shift 89
	OR  shift 90
	'?'  shift 91
	'>'  shift 92
	'<'  shift 93
	'+'  shift 94
	'-'  shift 95
	'*'  shift 96
	'/'  shift 97
	'%'  shift 98
	')'  reduce 19
	','  reduce 19


state 147
	cmd : ID '[' exp ']' '=' . exp ';'  (35)

	ID  shift 78
	NUM  shift 41
	INC  shift 45
	TRUE  shift 49
	FALSE  shift 50
	DEC  shift 52
	'!'  shift 55
	'('  shift 56
	.  error

	exp  goto 157


state 148
	cmd : READ '(' ID ')' ';' .  (36)

	.  reduce 36


state 149
	cmd : WRITE '(' LIT ')' ';' .  (32)

	.  reduce 32


state 150
	cmd : WRITE '(' LIT $$6 ',' . exp ')' ';'  (34)

	ID  shift 78
	NUM  shift 41
	INC  shift 45
	TRUE  shift 49
	FALSE  shift 50
	DEC  shift 52
	'!'  shift 55
	'('  shift 56
	.  error

	exp  goto 158


state 151
	cmd : IF '(' exp $$9 ')' . cmd restoIf  (41)

	ID  shift 40
	NUM  shift 41
	READ  shift 42
	WRITE  shift 43
	IF  shift 44
	INC  shift 45
	BREAK  shift 46
	CONTINUE  shift 47
	WHILE  shift 48
	TRUE  shift 49
	FALSE  shift 50
	DO  shift 51
	DEC  shift 52
	FOR  shift 53
	RETURN  shift 54
	'!'  shift 55
	'('  shift 56
	'{'  shift 57
	.  error

	exp  goto 59
	cmd  goto 159


state 152
	cmd : WHILE $$7 '(' exp ')' . $$8 cmd  (39)
	$$8 : .  (38)

	.  reduce 38

	$$8  goto 160


state 153
	cmd : DO $$10 cmd WHILE '(' . exp ')' ';' $$11  (44)

	ID  shift 78
	NUM  shift 41
	INC  shift 45
	TRUE  shift 49
	FALSE  shift 50
	DEC  shift 52
	'!'  shift 55
	'('  shift 56
	.  error

	exp  goto 161


state 154
	cmd : FOR '(' expOpc ';' $$12 . expOpcL ';' $$13 expOpc ')' $$14 cmd  (50)
	expOpcL : .  (56)

	ID  shift 78
	NUM  shift 41
	INC  shift 45
	TRUE  shift 49
	FALSE  shift 50
	DEC  shift 52
	'!'  shift 55
	'('  shift 56
	';'  reduce 56

	exp  goto 162
	expOpcL  goto 163


state 155
	exp : ID '[' exp ']' .  (88)

	.  reduce 88


state 156
	exp : exp '?' $$16 exp $$17 . ':' exp  (87)

	':'  shift 164
	.  error


state 157
	cmd : ID '[' exp ']' '=' exp . ';'  (35)
	exp : exp . '+' exp  (66)
	exp : exp . '-' exp  (67)
	exp : exp . '*' exp  (68)
	exp : exp . '/' exp  (69)
	exp : exp . '%' exp  (70)
	exp : exp . '>' exp  (71)
	exp : exp . '<' exp  (72)
	exp : exp . EQ exp  (73)
	exp : exp . LEQ exp  (74)
	exp : exp . GEQ exp  (75)
	exp : exp . NEQ exp  (76)
	exp : exp . OR exp  (77)
	exp : exp . AND exp  (78)
	exp : exp . '?' $$16 exp $$17 ':' exp  (87)

	EQ  shift 85
	LEQ  shift 86
	GEQ  shift 87
	NEQ  shift 88
	AND  shift 89
	OR  shift 90
	'?'  shift 91
	'>'  shift 92
	'<'  shift 93
	'+'  shift 94
	'-'  shift 95
	'*'  shift 96
	'/'  shift 97
	'%'  shift 98
	';'  shift 165
	.  error


state 158
	cmd : WRITE '(' LIT $$6 ',' exp . ')' ';'  (34)
	exp : exp . '+' exp  (66)
	exp : exp . '-' exp  (67)
	exp : exp . '*' exp  (68)
	exp : exp . '/' exp  (69)
	exp : exp . '%' exp  (70)
	exp : exp . '>' exp  (71)
	exp : exp . '<' exp  (72)
	exp : exp . EQ exp  (73)
	exp : exp . LEQ exp  (74)
	exp : exp . GEQ exp  (75)
	exp : exp . NEQ exp  (76)
	exp : exp . OR exp  (77)
	exp : exp . AND exp  (78)
	exp : exp . '?' $$16 exp $$17 ':' exp  (87)

	EQ  shift 85
	LEQ  shift 86
	GEQ  shift 87
	NEQ  shift 88
	AND  shift 89
	OR  shift 90
	'?'  shift 91
	'>'  shift 92
	'<'  shift 93
	'+'  shift 94
	'-'  shift 95
	'*'  shift 96
	'/'  shift 97
	'%'  shift 98
	')'  shift 166
	.  error


159: shift/reduce conflict (shift 167, reduce 59) on ELSE
state 159
	cmd : IF '(' exp $$9 ')' cmd . restoIf  (41)
	restoIf : .  (59)

	ELSE  shift 167
	ID  reduce 59
	NUM  reduce 59
	READ  reduce 59
	WRITE  reduce 59
	IF  reduce 59
	INC  reduce 59
	BREAK  reduce 59
	CONTINUE  reduce 59
	WHILE  reduce 59
	TRUE  reduce 59
	FALSE  reduce 59
	DO  reduce 59
	DEC  reduce 59
	FOR  reduce 59
	RETURN  reduce 59
	'!'  reduce 59
	'('  reduce 59
	'{'  reduce 59
	'}'  reduce 59

	restoIf  goto 168


state 160
	cmd : WHILE $$7 '(' exp ')' $$8 . cmd  (39)

	ID  shift 40
	NUM  shift 41
	READ  shift 42
	WRITE  shift 43
	IF  shift 44
	INC  shift 45
	BREAK  shift 46
	CONTINUE  shift 47
	WHILE  shift 48
	TRUE  shift 49
	FALSE  shift 50
	DO  shift 51
	DEC  shift 52
	FOR  shift 53
	RETURN  shift 54
	'!'  shift 55
	'('  shift 56
	'{'  shift 57
	.  error

	exp  goto 59
	cmd  goto 169


state 161
	cmd : DO $$10 cmd WHILE '(' exp . ')' ';' $$11  (44)
	exp : exp . '+' exp  (66)
	exp : exp . '-' exp  (67)
	exp : exp . '*' exp  (68)
	exp : exp . '/' exp  (69)
	exp : exp . '%' exp  (70)
	exp : exp . '>' exp  (71)
	exp : exp . '<' exp  (72)
	exp : exp . EQ exp  (73)
	exp : exp . LEQ exp  (74)
	exp : exp . GEQ exp  (75)
	exp : exp . NEQ exp  (76)
	exp : exp . OR exp  (77)
	exp : exp . AND exp  (78)
	exp : exp . '?' $$16 exp $$17 ':' exp  (87)

	EQ  shift 85
	LEQ  shift 86
	GEQ  shift 87
	NEQ  shift 88
	AND  shift 89
	OR  shift 90
	'?'  shift 91
	'>'  shift 92
	'<'  shift 93
	'+'  shift 94
	'-'  shift 95
	'*'  shift 96
	'/'  shift 97
	'%'  shift 98
	')'  shift 170
	.  error


state 162
	expOpcL : exp .  (55)
	exp : exp . '+' exp  (66)
	exp : exp . '-' exp  (67)
	exp : exp . '*' exp  (68)
	exp : exp . '/' exp  (69)
	exp : exp . '%' exp  (70)
	exp : exp . '>' exp  (71)
	exp : exp . '<' exp  (72)
	exp : exp . EQ exp  (73)
	exp : exp . LEQ exp  (74)
	exp : exp . GEQ exp  (75)
	exp : exp . NEQ exp  (76)
	exp : exp . OR exp  (77)
	exp : exp . AND exp  (78)
	exp : exp . '?' $$16 exp $$17 ':' exp  (87)

	EQ  shift 85
	LEQ  shift 86
	GEQ  shift 87
	NEQ  shift 88
	AND  shift 89
	OR  shift 90
	'?'  shift 91
	'>'  shift 92
	'<'  shift 93
	'+'  shift 94
	'-'  shift 95
	'*'  shift 96
	'/'  shift 97
	'%'  shift 98
	';'  reduce 55


state 163
	cmd : FOR '(' expOpc ';' $$12 expOpcL . ';' $$13 expOpc ')' $$14 cmd  (50)

	';'  shift 171
	.  error


state 164
	exp : exp '?' $$16 exp $$17 ':' . exp  (87)

	ID  shift 78
	NUM  shift 41
	INC  shift 45
	TRUE  shift 49
	FALSE  shift 50
	DEC  shift 52
	'!'  shift 55
	'('  shift 56
	.  error

	exp  goto 172


state 165
	cmd : ID '[' exp ']' '=' exp ';' .  (35)

	.  reduce 35


state 166
	cmd : WRITE '(' LIT $$6 ',' exp ')' . ';'  (34)

	';'  shift 173
	.  error


state 167
	restoIf : ELSE . $$15 cmd  (58)
	$$15 : .  (57)

	.  reduce 57

	$$15  goto 174


state 168
	cmd : IF '(' exp $$9 ')' cmd restoIf .  (41)

	.  reduce 41


state 169
	cmd : WHILE $$7 '(' exp ')' $$8 cmd .  (39)

	.  reduce 39


state 170
	cmd : DO $$10 cmd WHILE '(' exp ')' . ';' $$11  (44)

	';'  shift 175
	.  error


state 171
	cmd : FOR '(' expOpc ';' $$12 expOpcL ';' . $$13 expOpc ')' $$14 cmd  (50)
	$$13 : .  (48)

	.  reduce 48

	$$13  goto 176


state 172
	exp : exp . '+' exp  (66)
	exp : exp . '-' exp  (67)
	exp : exp . '*' exp  (68)
	exp : exp . '/' exp  (69)
	exp : exp . '%' exp  (70)
	exp : exp . '>' exp  (71)
	exp : exp . '<' exp  (72)
	exp : exp . EQ exp  (73)
	exp : exp . LEQ exp  (74)
	exp : exp . GEQ exp  (75)
	exp : exp . NEQ exp  (76)
	exp : exp . OR exp  (77)
	exp : exp . AND exp  (78)
	exp : exp . '?' $$16 exp $$17 ':' exp  (87)
	exp : exp '?' $$16 exp $$17 ':' exp .  (87)

	EQ  shift 85
	LEQ  shift 86
	GEQ  shift 87
	NEQ  shift 88
	AND  shift 89
	OR  shift 90
	'>'  shift 92
	'<'  shift 93
	'+'  shift 94
	'-'  shift 95
	'*'  shift 96
	'/'  shift 97
	'%'  shift 98
	'?'  reduce 87
	':'  reduce 87
	')'  reduce 87
	';'  reduce 87
	']'  reduce 87
	','  reduce 87


state 173
	cmd : WRITE '(' LIT $$6 ',' exp ')' ';' .  (34)

	.  reduce 34


state 174
	restoIf : ELSE $$15 . cmd  (58)

	ID  shift 40
	NUM  shift 41
	READ  shift 42
	WRITE  shift 43
	IF  shift 44
	INC  shift 45
	BREAK  shift 46
	CONTINUE  shift 47
	WHILE  shift 48
	TRUE  shift 49
	FALSE  shift 50
	DO  shift 51
	DEC  shift 52
	FOR  shift 53
	RETURN  shift 54
	'!'  shift 55
	'('  shift 56
	'{'  shift 57
	.  error

	exp  goto 59
	cmd  goto 177


state 175
	cmd : DO $$10 cmd WHILE '(' exp ')' ';' . $$11  (44)
	$$11 : .  (43)

	.  reduce 43

	$$11  goto 178


state 176
	cmd : FOR '(' expOpc ';' $$12 expOpcL ';' $$13 . expOpc ')' $$14 cmd  (50)
	expOpc : .  (54)

	ID  shift 78
	NUM  shift 41
	INC  shift 45
	TRUE  shift 49
	FALSE  shift 50
	DEC  shift 52
	'!'  shift 55
	'('  shift 56
	')'  reduce 54

	exp  goto 111
	expOpc  goto 179


state 177
	restoIf : ELSE $$15 cmd .  (58)

	.  reduce 58


state 178
	cmd : DO $$10 cmd WHILE '(' exp ')' ';' $$11 .  (44)

	.  reduce 44


state 179
	cmd : FOR '(' expOpc ';' $$12 expOpcL ';' $$13 expOpc . ')' $$14 cmd  (50)

	')'  shift 180
	.  error


state 180
	cmd : FOR '(' expOpc ';' $$12 expOpcL ';' $$13 expOpc ')' . $$14 cmd  (50)
	$$14 : .  (49)

	.  reduce 49

	$$14  goto 181


state 181
	cmd : FOR '(' expOpc ';' $$12 expOpcL ';' $$13 expOpc ')' $$14 . cmd  (50)

	ID  shift 40
	NUM  shift 41
	READ  shift 42
	WRITE  shift 43
	IF  shift 44
	INC  shift 45
	BREAK  shift 46
	CONTINUE  shift 47
	WHILE  shift 48
	TRUE  shift 49
	FALSE  shift 50
	DO  shift 51
	DEC  shift 52
	FOR  shift 53
	RETURN  shift 54
	'!'  shift 55
	'('  shift 56
	'{'  shift 57
	.  error

	exp  goto 59
	cmd  goto 182


state 182
	cmd : FOR '(' expOpc ';' $$12 expOpcL ';' $$13 expOpc ')' $$14 cmd .  (50)

	.  reduce 50


Rules never reduced:
	fList : fList funcDecl  (12)
	fList :  (13)


State 2 contains 3 shift/reduce conflicts.
State 8 contains 3 shift/reduce conflicts.
State 79 contains 1 shift/reduce conflict.
State 159 contains 1 shift/reduce conflict.


50 terminals, 35 nonterminals
90 grammar rules, 183 states
